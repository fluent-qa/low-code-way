[global_tags]

[agent]
  interval = "15s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  debug = false
  quiet = false
  logtarget = "file"
  logfile = ""
  logfile_rotation_interval = "0h"
  logfile_rotation_max_size = "0MB"
  logfile_rotation_max_archives = 5
  hostname = ""
  omit_hostname = false

[[inputs.postgresql]]
  address = "postgres://postgres:$SQL_ROOT_PASSWORD@postgres/postgres?sslmode=disable"

[[inputs.mysql]]
  servers = [
    "root:$SQL_ROOT_PASSWORD@tcp(mariadb:3306)/?tls=false",
    "root:$TULEAP_SQL_PASSWORD@tcp(tuleap-mysql:3306)/?tls=false"
  ]

  metric_version = 2

  ## gather metrics from all channels from SHOW SLAVE STATUS command output
  gather_all_slave_channels = false

  ## gather metrics from SHOW SLAVE STATUS command output
  gather_slave_status = true

  ## use SHOW ALL SLAVES STATUS command output for MariaDB
  mariadb_dialect = true

  ## gather metrics from SHOW BINARY LOGS command output
  # gather_binary_logs = true

  ## gather metrics from SHOW GLOBAL VARIABLES command output
  gather_global_variables = true

  gather_perf_events_statements = true

[[inputs.prometheus]]
  ## An array of urls to scrape metrics from.
  urls = [
    "http://registry:5001/metrics",
    "http://tasks.registry:5001/metrics",
    "http://traefik:8082/metrics",
    "http://tasks.traefik:8082/metrics",
    "http://prometheus:9090/metrics",
    "http://tasks.prometheus:9090/metrics",
    "http://minio:9000/minio/v2/metrics/cluster",
    "http://tasks.minio:9000/minio/v2/metrics/cluster",
    "http://influxdb:8086/metrics",
    "http://tasks.influxdb:8086/metrics",
  ]

[[outputs.prometheus_client]]
  listen = ":9273"
  metric_version = 2
  # basic_username = "Foo"
  # basic_password = "Bar"
  # ip_range = []
  # path = "/metrics"
  # expiration_interval = "60s"
  # collectors_exclude = ["gocollector", "process"]
  # string_as_label = true
  # tls_cert = "/etc/ssl/telegraf.crt"
  # tls_key = "/etc/ssl/telegraf.key"
  # tls_allowed_cacerts = ["/etc/telegraf/clientca.pem"]
  # export_timestamp = false

[[outputs.influxdb_v2]]
  urls = ["http://influxdb:8086"]

  ## Token for authentication.
  token = "$INFLUXDB_TOKEN"

  ## Organization is the name of the organization you wish to write to.
  organization = "$INFLUXDB_ORG"

  ## Destination bucket to write into.
  bucket = "$INFLUXDB_BUCKET"

[[outputs.influxdb]]
  urls = ["http://victoriametrics:8428"]
